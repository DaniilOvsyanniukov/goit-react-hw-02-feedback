{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Button/Button.js","components/Statistics/Statistics.js","App.js","index.js","components/Button/Button.module.css"],"names":["module","exports","Button","buttonName","increment","className","s","list","button","onClick","Statistics","good","neutral","bad","total","percantage","item","App","state","props","initialValue","event","currentTarget","textContent","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","buttons","Object","keys","this","map","el","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,yKCW1CC,EATA,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,UAC5B,OACE,oBAAIC,UAAWC,IAAEC,KAAjB,SACE,wBAAQF,UAAWC,IAAEE,OAAQC,QAASL,EAAtC,SACGD,O,gBCmBMO,EArBI,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,IAAKC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAC/C,OACE,qBAAIV,UAAWC,IAAEC,KAAjB,UACE,6BACE,oBAAGF,UAAWC,IAAEU,KAAhB,mBAA6BL,OAE/B,6BACE,oBAAGN,UAAWC,IAAEU,KAAhB,sBAAgCJ,OAElC,6BACE,oBAAGP,UAAWC,IAAEU,KAAhB,kBAA4BH,OAE9B,6BACE,oBAAGR,UAAWC,IAAEU,KAAhB,oBAA8BF,EAA9B,SAEF,6BACE,oBAAGT,UAAWC,IAAEU,KAAhB,gCAA0CD,EAA1C,aCjBFE,E,4MAKJC,MAAQ,CACNP,KAAM,EAAKQ,MAAMC,aACjBR,QAAS,EAAKO,MAAMC,aACpBP,IAAK,EAAKM,MAAMC,c,EAGlBhB,UAAY,SAACiB,GACX,IAAMlB,EAAakB,EAAMC,cAAcC,YACvC,EAAKC,UAAS,SAACC,GAAD,sBACRtB,EAAasB,EAAUtB,GAAc,O,EAG7CuB,mBAAqB,WAEnB,OADc,EAAKR,MAAMP,KAAO,EAAKO,MAAMN,QAAU,EAAKM,MAAML,K,EAIlEc,gCAAkC,WAEhC,OADmBC,KAAKC,MAAO,IAAM,EAAKH,qBAAwB,EAAKR,MAAMP,O,4CAK/E,WAAU,IAAD,OACDmB,EAAUC,OAAOC,KAAKC,KAAKf,OAEjC,OACE,sBAAKb,UAAU,YAAf,UACE,sBAAKA,UAAU,UAAf,UACE,sDACA,oBAAIA,UAAU,OAAd,SACGyB,EAAQI,KAAI,SAACC,GAAD,OACX,cAAC,EAAD,CAAiBhC,WAAYgC,EAAI/B,UAAW,EAAKA,WAApC+B,WAInB,sBAAK9B,UAAU,sBAAf,UACE,2CAC+B,IAA9B4B,KAAKP,qBACJ,oDAEA,cAAC,EAAD,CACEf,KAAMsB,KAAKf,MAAMP,KACjBC,QAASqB,KAAKf,MAAMN,QACpBC,IAAKoB,KAAKf,MAAML,IAChBC,MAAOmB,KAAKP,qBACZX,WAAYkB,KAAKN,8C,GAnDbS,aAAZnB,EACGoB,aAAe,CACpBjB,aAAc,GA0DHH,QC1DfqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1B1C,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,wB","file":"static/js/main.5679ec1b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__27Rbn\",\"item\":\"Statistics_item__25zft\"};","import PropTypes from \"prop-types\";\nimport s from \"./Button.module.css\";\n\nconst Button = ({ buttonName, increment }) => {\n  return (\n    <li className={s.list}>\n      <button className={s.button} onClick={increment}>\n        {buttonName}\n      </button>\n    </li>\n  );\n};\nexport default Button;\n\nButton.propTypes = {\n  buttonName: PropTypes.string,\n  increment: PropTypes.func,\n};\n","import PropTypes from \"prop-types\";\nimport s from \"./Statistics.module.css\";\n\n// import s from './Friendlist.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, percantage }) => {\n  return (\n    <ul className={s.list}>\n      <li>\n        <p className={s.item}>Good: {good}</p>\n      </li>\n      <li>\n        <p className={s.item}>Neutral: {neutral}</p>\n      </li>\n      <li>\n        <p className={s.item}>Bad: {bad}</p>\n      </li>\n      <li>\n        <p className={s.item}>Total: {total} </p>\n      </li>\n      <li>\n        <p className={s.item}>Positive feedback: {percantage}%</p>\n      </li>\n    </ul>\n  );\n};\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  percantage: PropTypes.number,\n};\n","import React, { Component } from \"react\";\nimport Button from \"./components/Button/Button\";\nimport Statistics from \"./components/Statistics/Statistics\";\n\nclass App extends Component {\n  static defaultProps = {\n    initialValue: 0,\n  };\n\n  state = {\n    good: this.props.initialValue,\n    neutral: this.props.initialValue,\n    bad: this.props.initialValue,\n  };\n\n  increment = (event) => {\n    const buttonName = event.currentTarget.textContent;\n    this.setState((prevState) =>\n      ({ [buttonName]: prevState[buttonName] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const total = this.state.good + this.state.neutral + this.state.bad;\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const percentage = Math.floor((100 / this.countTotalFeedback()) * this.state.good);\n    return percentage;\n  }\n\n\n  render() {\n    const buttons = Object.keys(this.state);\n\n    return (\n      <div className=\"container\">\n        <div className=\"section\">\n          <p>Please leave feedback</p>\n          <ul className=\"list\">\n            {buttons.map((el) => (\n              <Button key={el} buttonName={el} increment={this.increment} />\n            ))}\n          </ul>\n        </div>\n        <div className=\"feedback-statistics\">\n          <p>Statistics</p>\n          {this.countTotalFeedback() === 0 ? (\n            <p>\"No feedback given\"</p>\n          ) : (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              percantage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__puNwx\",\"list\":\"Button_list__3ARya\"};"],"sourceRoot":""}